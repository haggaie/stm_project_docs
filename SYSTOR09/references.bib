@comment{This file has been generated by Pybliographer}


@InProceedings{RSTM,
  Author         = {Virendra J. Marathe and Michael F. Spear and
                   Christopher Heriot and Athul Acharya and David
                   Eisenstat and William N. Scherer Iii and Michael L.
                   Scott},
  Title          = {Lowering the overhead of nonblocking software
                   transactional memory},
  BookTitle      = {Dept. of Computer Science, Univ. of Rochester},
  year           = 2006
}

@Misc{icc:abi,
  Author         = {{Intel}},
  Title          = {Transactional Memory {ABI}},
  url            = {http://software.intel.com/file/8097}
}

@InProceedings{tm:commit-handlers,
  Author         = {Austen Mcdonald and Jaewoong Chung and Brian D.
                   Carlstrom and Chi Cao Minh and Hassan Chafi and
                   Christos Kozyrakis and Kunle Olukotun},
  Title          = {Architectural Semantics for Practical Transactional
                   Memory},
  BookTitle      = {In Proceedings of the 33rd International Symposium on
                   Computer Architecture},
  Pages          = {53--65},
  Publisher      = {IEEE Computer Society},
  year           = 2006
}

@Misc{apache,
  Author         = {{The Apache Software Foundation}},
  Title          = {Apache {HTTP} {S}erver {P}roject},
  url            = {http://httpd.apache.org/}
}

@InProceedings{icc,
  Author         = {Yang Ni and Adam Welc and Ali-Reza Adl-Tabatabai and
                   Moshe Bach and Sion Berkowits and James Cownie and
                   Robert Geva and Sergey Kozhukow and Ravi Narayanaswamy
                   and Jeffrey Olivier and Serguei Preis and Bratin Saha
                   and Ady Tal and Xinmin Tian},
  Title          = {Design and implementation of transactional constructs
                   for C/C++},
  BookTitle      = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN
                   conference on Object oriented programming systems
                   languages and applications},
  Pages          = {195--212},
  Address        = {New York, NY, USA},
  Publisher      = {ACM},
  doi            = {http://doi.acm.org/10.1145/1449764.1449780},
  isbn           = {978-1-60558-215-3},
  location       = {Nashville, TN, USA},
  year           = 2008
}

@PhdThesis{fraser:practical:thesis:2003,
  Author         = {Fraser, Keir},
  Title          = {Practical lock freedom},
  School         = {Cambridge University Computer Laboratory},
  Note           = {Also available as Technical Report UCAM-CL-TR-579},
  year           = 2003
}

@InProceedings{LLVM:CGO04,
  Author         = {Chris Lattner and Vikram Adve},
  Title          = "{LLVM: A Compilation Framework for Lifelong Program
                   Analysis \& Transformation}",
  BookTitle      = "{Proceedings of the 2004 International Symposium on
                   Code Generation and Optimization (CGO'04)}",
  Address        = {Palo Alto, California},
  month          = {Mar},
  year           = 2004
}

@InProceedings{TL2,
  Author         = "D. Dice, O. Shalev, and N. Shavit",
  Title          = "Transactional Locking II",
  BookTitle      = "Proc. of the 20th International Symposium on
                   Distributed Computing (DISC 2006)",
  Pages          = "194--208",
  site           = "Stockholm, Sweden",
  year           = 2006
}

@Misc{siege,
  Author         = {{Jeffrey Fulmer}},
  Title          = {Siege {HTTP} regression testing and benchmarking
                   utility},
  url            = {http://www.joedog.org/JoeDog/Siege}
}

@InProceedings{STMBench7,
  Author         = {Guerraoui, Rachid and Kapalka, Michal and Vitek, Jan},
  Title          = {{STMB}ench7: {A} {B}enchmark for {S}oftware
                   {T}ransactional {M}emory},
  BookTitle      = {Second {E}uropean {S}ystems {C}onference
                   {E}uro{S}ys2007},
  abstract       = {Software transactional memory (STM) is a promising
                   technique for controlling concurrency in modern
                   multi-processor architectures. STM aims to be more
                   scalable than explicit coarse-grained locking and
                   easier to use than fine-grained locking. However, STM
                   implementations have yet to demonstrate that their
                   runtime overheads are acceptable. To date, empiric
                   evaluations of these implementations have suffered from
                   the lack of realistic benchmarks. Measuring performance
                   of an STM in an overly simplified setting can be at
                   best uninformative and at worst misleading as it may
                   steer researchers to try to optimize irrelevant aspects
                   of their implementations. This paper presents
                   STMBench7: a candidate benchmark for evaluating STM
                   implementations. The underlying data structure consists
                   of a set of graphs and indexes intended to be
                   suggestive of many complex applications, e.g., CAD/CAM.
                   A collection of operations is supported to model a wide
                   range of workloads and concurrency patterns. Companion
                   locking strategies serve as a baseline for STM
                   performance comparisons. STMBench7 strives for
                   simplicity. Users may choose a workload, number of
                   threads, benchmark length, as well as the possibility
                   of structure modification and the nature of traversals
                   of shared data structures. We illustrate the use of
                   STMBench7 with an evaluation of a well-known software
                   transactional memory implementation.},
  affiliation    = {EPFL},
  details        = {http://infoscience.epfl.ch/record/101108},
  documenturl    = {http://infoscience.epfl.ch/getfile.py?recid=101108&mode=best},
  keywords       = {Software transactional memory; Benchmarks},
  location       = {Lisboa, Portugal},
  oai-id         = {oai:infoscience.epfl.ch:101108},
  oai-set        = {conf; fulltext; fulltext-public},
  review         = {REVIEWED},
  status         = {PUBLISHED},
  unit           = {LPD},
  year           = 2007
}

@Misc{gcctm,
  Author         = {{Albert Cohen}},
  Title          = {G{CC} for {T}ransactional {M}emory},
  HowPublished   = {HiPEAC},
  month          = {7 } # jun,
  url            = {http://www.hipeac.net/node/2419},
  year           = 2008
}

@InProceedings{felber2008tinystm,
  Author         = { Pascal Felber and Christof Fetzer and Torvald Riegel },
  Title          = { Dynamic Performance Tuning of Word-Based Software
                   Transactional Memory },
  BookTitle      = { Proceedings of the 13th ACM SIGPLAN Symposium on
                   Principles and Practice of Parallel Programming (PPoPP)
                   },
  abstract       = { The current generation of software transactional
                   memories has the advantage of being simple and
                   efficient. Nevertheless, there are several parameters
                   that affect the performance of a transactional memory,
                   for example the locality of the application and the
                   cache line size of the processor. In this paper, we
                   investigate dynamic tuning mechanisms on a new
                   time-based software transactional memory
                   implementation. We study in extensive measurements the
                   performance of our implementation and exhibit the
                   benefits of dynamic tuning. We compare our results with
                   TL2, which is currently one of the fastest word-based
                   software transactional memories. },
  comment        = { generated by split.pl },
  year           = 2008
}

@InCollection{baek:opentm:pact:2007,
  Author         = {Baek, Woongki and Cao Minh, Chi and Trautmann, Martin
                   and Kozyrakis, Christos and Olukotun, Kunle},
  Title          = {The OpenTM Transactional Application Programming
                   Interface},
  BookTitle      = {Proceedings of the 16th International Conference on
                   Parallel Architectures and Compilation Techniques},
  Pages          = {376--387},
  month          = {Sep},
  year           = 2007
}

@InProceedings{herlihy:DSTM,
  Author         = {Herlihy,, Maurice and Luchangco,, Victor and Moir,,
                   Mark and Scherer,III, William N.},
  Title          = {Software transactional memory for dynamic-sized data
                   structures},
  BookTitle      = {PODC '03: Proceedings of the twenty-second annual
                   symposium on Principles of distributed computing},
  Pages          = {92--101},
  Address        = {New York, NY, USA},
  Publisher      = {ACM},
  doi            = {http://doi.acm.org/10.1145/872035.872048},
  isbn           = {1-58113-708-7},
  location       = {Boston, Massachusetts},
  year           = 2003
}

@InProceedings{caominh:stamp:iiswc:2008,
  Author         = {Cao Minh, Chi and Chung, JaeWoong and Kozyrakis,
                   Christos and Olukotun, Kunle},
  Title          = {STAMP: Stanford Transactional Applications for
                   Multi-Processing},
  BookTitle      = {IISWC '08: Proceedings of The IEEE International
                   Symposium on Workload Characterization},
  month          = {September},
  year           = 2008
}

@InProceedings{felber2007tanger,
  Author         = {Pascal Felber and Christof Fetzer and Ulrich M\"uller
                   and Torvald Riegel and Martin S\"u{\ss}kraut and Heiko
                   Sturzrehm },
  Title          = {Transactifying Applications using an Open Compiler
                   Framework},
  BookTitle      = {TRANSACT},
  month          = {August},
  year           = 2007
}

